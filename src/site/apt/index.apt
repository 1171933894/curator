 ------
 Apache Curator Home
 ------
 Apache Curator Documentation Team
 ------
 2013-03-09
 ------

~~
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~

Welcome to Apache Curator

* What is Curator?

 Curator <n &#x02c8;kyoor&#x035d;&#x02cc;&#x0101;t&#x0259;r>: a keeper or custodian of a museum or other collection - A ZooKeeper Keeper.

 Curator is a set of Java libraries that make using {{{http://zookeeper.apache.org}Apache ZooKeeper}} much easier.

* Getting Started

 See the page for quick start: [[Getting Started]].

* Components

*---*---*
|[[Client]]|A replacement for the bundled <code>ZooKeeper</code> class that takes care of some low-level housekeeping and provides some useful utilities.|
*---*---*
|[[Framework]]|The Curator Framework is a high-level API that greatly simplifies using ZooKeeper. It adds many features that build on ZooKeeper and handles the complexity of managing connections to the ZooKeeper cluster and retrying operations.|
*---*---*
|[[Recipes]]|Implementations of some of the common ZooKeeper "recipes". The implementations are built on top of the Curator Framework.|
*---*---*
|[[Utilities]]|Various utilities that are useful when using ZooKeeper.|
*---*---*
|[[Errors]]|How Curator deals with errors, connection issues, recoverable exceptions, etc.|
*---*---*
|[[Extensions]]|Optional/extension recipes for vertical uses.|
*---*---*

* Maven / Artifacts

 Curator binaries are published to Maven Central. Curator consists of several artifacts. Which artifacts to use depends on your needs. For most users, the only artifact you need is <code>curator-recipes</code>.

*---*---*---*
|<<GroupID/Org>>|<<ArtifactID/Name>>|<<Description>>|
*---*---*---*
|org.apache.curator|curator-recipes|All of the recipes. Note: this artifact has dependencies on client and framework and, so, Maven (or whatever tool you're using) should pull those in automatically.|
*---*---*---*
|org.apache.curator|curator-framework|The Curator Framework high level API. This is built on top of the client and should pull it in automatically.|
*---*---*---*
|org.apache.curator|curator-client|The Curator Client - replacement for the ZooKeeper class in the ZK distribution.|
*---*---*---*
|org.apache.curator|curator-test|Contains the TestingServer, the TestingCluster and a few other tools useful for testing.|
*---*---*---*
|org.apache.curator|curator-x-discovery|A Service Discovery implementation built on the Curator Framework.|
*---*---*---*
|org.apache.curator|curator-x-discovery-server|A RESTful server that can be used with Curator Discovery.|
*---*---*---*
