h1. Curator Async

h2. Packaging

Curator Async is in its own package in Maven Central: curator\-x\-async

h2. What Is Curator Async?

Curator Async is a [DSL|https://en.wikipedia.org/wiki/Domain-specific_language] that wraps existing
{{CuratorFramework}} instances. This DSL is entirely asynchronous and uses
[Java 8's CompletionStage|https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html]
mechanism for chaining, composing, etc. Additionally, Curator's original DSL has been cleaned up
and simplified, in particular for operations such as {{create()}}.

With this DSL you can do asynchronous tasks in a more natural, functional way using
[Java 8 lambdas|https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html].

The Curator Async package also contains a strongly typed DSL and strongly typed Cache Recipe wrappers that
allows you to map a ZooKeeper path to a serializable class as opposed to raw byte arrays.

h2. [[Curator Async|async.html]]

With this DSL you can do asynchronous tasks in a more natural, functional way using
[Java 8 lambdas|https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html]. For example:

{code}
// let "client" be a CuratorFramework instance
AsyncCuratorFramework async = AsyncCuratorFramework.wrap(client);
async.checkExists().forPath(somePath).thenAccept(stat -> mySuccessOperation(stat));
{code}

See [[Curator Async|async.html]] for details.

h2. [[Modeled Curator|modeled.html]]

This is a strongly typed DSL that allows you to map a ZooKeeper path to a serializable class as
opposed to raw byte arrays. For example:

{code}
// let "client" be a CuratorFramework instance
ModeledCuratorFramework<MyModel> modeled = ModeledCuratorFramework.wrap(client, path, serializer);
modeled.create(new MyModel());
{code}

See [[Modeled Curator|modeled.html]] for details.

h2. [[Modeled Cache Recipes|modeled-cache-recipes.html]]

Strongly typed wrappers for Curator's Cache Recipes (NodeCache, PathChildrenCache and TreeCache) allow
you to use serializable classes as opposed to raw byte arrays. For example:

{code}
ModeledNodeCache<MyModel> cache = ModeledNodeCache.wrap(nodeCache, serializer);
cache.getCurrentData().ifPresent(data -> {
    MyModel model = data.getData();
    ...
);
{code}

See [[Modeled Cache Recipes|modeled-cache-recipes.html]] for details.
