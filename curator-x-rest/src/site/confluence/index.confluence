h1. Curator REST Proxy

NOTE: Curator REST Proxy is in its own package in Maven Central: {{curator-x-rest}}

The Curator REST module implements a proxy that bridges non-java environments with the Curator framework and recipes. Every major language
today has a REST library available. With the Curator REST Proxy, you can now take advantage of the Curator framework and its recipes in
any language.

*TBD*

!images/client.png!

h2. Building and Packaging

Dropwizard

*TBD*

h2. Deployment

Ideally, co-locate a Curator REST Proxy instance on each ZooKeeper instance. While this isn't a requirement, it is the simplest way to deploy.

*TBD*

h2. Stateful vs Stateless

Some of the Proxy's APIs are stateful and some are stateless. For the Client APIs, if you make a call that is either asynchronous, sets a watcher,
or creates an ephemeral node, there is some state that is stored. In these cases, you must periodically send a status heartbeat and examine the
resulting messages. This status heartbeat must be sent to the *same server* to which you originated the request. E.g. if you have 3 Curator REST
Proxies A, B and C and execute a lock API to server B, you must periodically send a status with the lock's ID to server B. See the section
below on Managing Status for more details.

h2. Managing Status

*TBD*

See the [[Status Message Page|status.html]] for details of the status messages for each type.

h2. APIs

See the [[APIs Page|apis.html]] for list of available APIs.

h2. Entities

See the [[Entity Descriptions Page|entities.html]] for details on the Entities used in the APIs.

